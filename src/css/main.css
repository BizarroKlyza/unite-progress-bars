html{font:normal normal normal 1rem/1.5 Helvetica Neue,Helvetica,Arial,sans-serif}.vertical-center{display:flex;align-items:center;justify-content:center}button,input,label,select,textarea{margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:none;line-height:1;font-size:13px;font-family:Arial}input:focus{outline:0}input,textarea{box-sizing:content-box}button,input[type=button],input[type=checkbox],input[type=radio],input[type=reset],input[type=submit],select{box-sizing:border-box}input[type=checkbox],input[type=radio]{width:13px;height:13px}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box}::-webkit-search-decoration{display:none}button,input[type=button],input[type=reset],input[type=submit]{overflow:visible;width:auto}::-webkit-file-upload-button{padding:0;border:0;background:none}textarea{overflow:auto}select[multiple],textarea{vertical-align:top}body{font:13px/20px Lucida Grande,Tahoma,Verdana,sans-serif;color:#404040;background:#2a2a2a}.container{margin:60px auto;width:400px;text-align:center}.container .progress{margin:10px auto}.progress{padding:4px;background:rgba(0,0,0,.25);border-radius:6px;box-shadow:inset 0 1px 2px rgba(0,0,0,.25),0 1px hsla(0,0%,100%,.08);position:relative}.progress .progress-bar{height:20px;border-radius:4px;background-image:linear-gradient(180deg,hsla(0,0%,100%,.3),hsla(0,0%,100%,.05));background-color:green;transition:.4s linear;transition-property:width,background-color;box-shadow:0 0 1px 1px rgba(0,0,0,.25),inset 0 1px hsla(0,0%,100%,.1)}.percentage{position:absolute;-webkit-transform:translateY(-50%);transform:translateY(-50%);top:50%;color:#fff}#progress-select{width:100%;height:30px;margin-bottom:10px;background:#fff}.buttons{width:100%;display:flex;flex-direction:row;justify-content:space-between;flex-wrap:wrap}.buttons input[type=button]{background:#fff;width:calc(25% - 7.5px);padding:10px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
